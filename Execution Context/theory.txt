-->Javascript is Synchronous and single threaded language.

-->Everything happens inside an Execution context.

-->Execution Context is divided into two parts:-
1) Memory part also known as variable environment.
2) Code part also known as Thread of Execution. 

--> 2 phases of Execution context :-
1) Memory creation phase
2) Code execution phase

--> When we envoke function a brand new Execution context is created inside global Execution context.
After completion of function its E.C is deleted.
After completion of program global E.C is also deleted.

--> In memory creation phase
initially all the variables are assigned memory and their value is undefined.
functions are fully initiallised in this phase.

--> Javascript manages all the execution Context using its call stack.
--> At the bottom of call stack there is always Global Execution context.
if any other execution stack is created inside program it is pushed in stack.
after its completion its poped out of stack and execution go backs to where it left in global execution context.

--> Call stack maintains the order of execution of execution contexts.
It is also known as
>Execution context stack
>program stack
>Control Stack 
>RunTime Stack 